package page

import (
	"github.com/hrz8/goatsapp/views/component"
	"github.com/hrz8/goatsapp/internal/dbrepo"
)

templ DeviceNewLoading() {
	<button type="button" class="flex form-indicator px-5 py-2.5 text-gray-900 font-medium focus:ring-4 bg-white rounded-lg border text-sm text-center border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700" disabled>
		@component.Spinner()
		Loading...
	</button>
}

templ DeviceStyle() {
	<style>
		#qr-code-indicator {
			display: none;
		}
		.htmx-request#qr-code-indicator {
			display: block;
		}
	</style>
}

templ DeviceItem(dvc *dbrepo.GetDevicesByProjectEncodedIDRow) {
	<tr class="hover:bg-gray-100 dark:hover:bg-gray-700">
		<td class="flex items-center p-4 space-x-6 whitespace-nowrap">
			<div class="text-sm font-normal text-gray-500 dark:text-gray-400">
				<div class="text-base font-semibold text-gray-900 dark:text-white">
					{ dvc.Name }
				</div>
				<div class="text-sm font-normal text-gray-500 dark:text-gray-400">
					{ dvc.ClientDeviceID }
				</div>
			</div>
		</td>
		<td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap dark:text-white">
			<div class="text-sm font-normal text-gray-500 dark:text-gray-400">
				<div class="text-base font-semibold text-gray-900 dark:text-white">
					if dvc.PhoneNumber != nil {
						{ *dvc.PhoneNumber }
					} else {
						{ "-" }
					}
				</div>
				<div class="text-sm font-normal text-gray-500 dark:text-gray-400">
					if dvc.Jid != nil {
						{ *dvc.Jid }
					} else {
						{ "-" }
					}
				</div>
			</div>
		</td>
		<td class="p-4 text-base font-normal text-gray-900 whitespace-nowrap dark:text-white">
			<div class="flex items-center">
				if dvc.IsActive {
					<div class="h-2.5 w-2.5 rounded-full bg-green-400 mr-2"></div>
					Active
				} else {
					<div class="h-2.5 w-2.5 rounded-full bg-red-400 mr-2"></div>
					Inactive
				}
			</div>
		</td>
		<td class="p-4 whitespace-nowrap">
			<button
				type="button"
				class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
				data-drawer-target="scan-device-drawer"
				data-drawer-show="scan-device-drawer"
				data-drawer-placement="right"
				aria-controls="scan-device-drawer"
				hx-get={ "/devices/qr?session_id=" + dvc.ClientDeviceID }
				hx-indicator="#qr-code-indicator"
				hx-target="#qr-code"
				hx-swap="innerHTML settle:45s"
				hx-on::before-request={ clearQRCodeEl() }
				hx-on::after-request={ closeQRDrawer() }
			>
				<i class="fa-solid fa-qrcode"></i>&nbsp;Scan
			</button>
			<button
				type="button"
				class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
			>
				<i class="fa-regular fa-pen-to-square"></i>&nbsp;Edit user
			</button>
			<button
				type="button"
				class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-800 focus:ring-4 focus:ring-red-300 dark:focus:ring-red-900"
			>
				<i class="fa-regular fa-trash-can"></i>&nbsp;Delete user
			</button>
		</td>
	</tr>
}

script clearQRCodeEl() {
	clearTimeout(window.to);
	const qrcode = document.querySelector('#qr-code');
	qrcode.innerHTML = '';
}

script closeQRDrawer() {
	const drawer = FlowbiteInstances.getInstance('Drawer', 'scan-device-drawer');
	window.to = setTimeout(() => drawer.hide(), 45000);
}

templ Device(devices []*dbrepo.GetDevicesByProjectEncodedIDRow) {
	@component.Layout(component.LayoutProps{
		Section: component.Section{
			Styles:   []templ.Component{DeviceStyle()},
			Scripts:  []templ.ComponentScript{DeviceNewScript()},
			GlobalEl: []templ.Component{DeviceNew(), DeviceScan()},
		},
		ShowNavbar:  true,
		ShowSidebar: true,
		ShowFooter:  false,
		CurrentPage: "device",
	}) {
		<div class="mx-4 mt-3 bg-white rounded-lg shadow dark:bg-gray-800">
			<div class="grid grid-cols-1 px-4 xl:grid-cols-3 xl:gap-4">
				@component.PageHeader("Devices")
			</div>
			<div class="p-7 w-full mb-1">
				<div class="sm:flex">
					<div class="items-center hidden mb-3 sm:flex sm:divide-x sm:divide-gray-100 sm:mb-0 dark:divide-gray-700">
						<form class="lg:pr-3" action="#" method="GET">
							<label for="device-search" class="sr-only">Search</label>
							<div class="relative mt-1 lg:w-64 xl:w-96">
								<input
									type="text"
									name="email"
									id="device-search"
									class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
									placeholder="Search..."
								/>
							</div>
						</form>
					</div>
					<div class="flex items-center ml-auto space-x-2 sm:space-x-3">
						<button
							type="button"
							class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 sm:w-auto dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
							data-drawer-target="add-device-drawer"
							data-drawer-show="add-device-drawer"
							data-drawer-placement="right"
							aria-controls="add-device-drawer"
						>
							<span class="w-5 h-5 mr-2 -ml-1">
								<i class="fa-regular fa-square-plus"></i>
							</span>
							Add device
						</button>
					</div>
				</div>
			</div>
			<div class="flex flex-col">
				<div class="overflow-x-auto">
					<div class="inline-block min-w-full align-middle">
						<div class="overflow-hidden shadow">
							<table class="min-w-full divide-y divide-gray-200 table-fixed dark:divide-gray-600">
								<thead class="bg-gray-100 dark:bg-gray-700">
									<tr>
										<th
											scope="col"
											class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400"
										>
											Name
										</th>
										<th
											scope="col"
											class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400"
										>
											Phone Number
										</th>
										<th
											scope="col"
											class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400"
										>
											Status
										</th>
										<th
											scope="col"
											class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400"
										>
											Actions
										</th>
									</tr>
								</thead>
								<tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">
									for _, dvc := range devices {
										@DeviceItem(dvc)
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}
