package component

import "github.com/hrz8/goatsapp/internal/dbrepo"

type ProjectSelectorProps struct {
	Name       string
	ExtraClass string
	ButtonID   string
	DropdownID string
}

func isProjChecked(iter string, active string) bool {
	return iter == active
}

func isProjCheckedClass(iter string, active string) string {
	if iter == active {
		return "checked"
	}
	return ""
}

templ ProjectSelectorList(name string, active string, projects []*dbrepo.GetProjectsRow) {
	<form
		id={ "form-project-selector-" + name }
		hx-indicator=".form-indicator"
		hx-post="/projects/switch"
		hx-swap="outerHTML"
		hx-target="#toast"
		hx-select="#toast"
		hx-on::after-request="setTimeout(() => location.reload(), 1000)"
	>
		for _, proj := range projects {
			<li>
				<div class="flex p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
					<div class="flex items-center h-5">
						<input
							id={ name + "-radio-" + proj.EncodedID }
							name="project_id"
							type="radio"
							checked?={ isProjChecked(proj.EncodedID, active) }
							value={ proj.EncodedID }
							class={ isProjCheckedClass(proj.EncodedID, active), "select-project w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500" }
						/>
					</div>
					<div class="ms-2 text-sm">
						<label for={ name + "-radio-" + proj.EncodedID } class="cursor-pointer font-medium text-gray-900 dark:text-gray-300">
							<div>{ proj.Name }</div>
							<p
								id={ name + "-radio-" + proj.EncodedID + "-text" }
								class="text-xs font-normal text-gray-500 dark:text-gray-300"
							>
								{ proj.Alias }
								if proj.Description != nil {
									{ " - "+*proj.Description }
								}
							</p>
						</label>
					</div>
				</div>
			</li>
		}
		<button type="submit" class="hidden" name="switch_project"></button>
	</form>
}

templ ProjectSelector(props ProjectSelectorProps) {
	<div class={ props.ExtraClass }>
		<button
			id={ props.ButtonID }
			data-dropdown-toggle={ props.DropdownID }
			class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 w-full"
			type="button"
		>
			<span class="mr-2">
				<i class="fa-solid fa-shapes"></i>
			</span>
			Projects
			<span class="ml-2">
				<i class="fa-solid fa-caret-down"></i>
			</span>
		</button>
		<div id={ props.DropdownID } class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-60 dark:bg-gray-700 dark:divide-gray-600">
			<ul
				hx-get={ "/projects/selector?name=" + props.Name }
				hx-trigger={ "click once from:#" + props.ButtonID }
				hx-target="this"
				hx-swap="innerHTML"
				hx-on::after-request={ onLoadProjectSelector(props.DropdownID) }
				class="p-3 space-y-1 text-sm text-gray-700 dark:text-gray-200"
				aria-labelledby={ props.ButtonID }
			></ul>
			<button
				class="w-full flex items-center p-3 text-sm font-medium text-blue-600 border-t border-gray-200 rounded-b-lg bg-gray-50 dark:border-gray-600 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-blue-500 hover:underline"
				data-modal-target="add-project-modal"
				data-modal-toggle="add-project-modal"
			>
				<span class="mr-2">
					<i class="fa-solid fa-file-circle-plus"></i>
				</span>
				Add new project
			</button>
		</div>
	</div>
}

script onLoadProjectSelector(dropdownID string) {
	onLoadProjectSelector('#' +dropdownID)
}
