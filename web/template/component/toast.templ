package component

type ToastProps struct {
	Message string
	Hidden  bool
	Type    string
}

templ ToastWrapper(extraClass string) {
	<div id="toast" class={ "z-[60] fixed top-24 right-5 items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800", extraClass } role="alert">
		{ children... }
	</div>
}

templ ToastSuccess() {
	<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-500 bg-green-100 rounded-lg dark:bg-green-800 dark:text-green-200">
		<i class="fa-solid fa-circle-check"></i>
		<span class="sr-only">Checked icon</span>
	</div>
}

templ ToastFailed() {
	<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg dark:bg-red-800 dark:text-red-200">
		<i class="fa-solid fa-circle-xmark"></i>
		<span class="sr-only">Xmark icon</span>
	</div>
}

templ ToastBody(props ToastProps) {
	if props.Type == "success" {
		@ToastSuccess()
	} else if props.Type == "failed" {
		@ToastFailed()
	}
	<div class="ms-3 text-sm font-normal">{ props.Message }</div>
	<button
		id="toast-dismisser"
		type="button"
		class="ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700"
		data-dismiss-target="#toast"
		aria-label="Close"
	>
		<i class="fa-solid fa-xmark"></i>
		<span class="sr-only">Close</span>
	</button>
}

templ Toast(props ToastProps) {
	if props.Hidden {
		@ToastWrapper("hidden") {
			@ToastBody(props)
		}
	} else {
		@ToastWrapper("flex") {
			@ToastBody(props)
		}
	}
}
